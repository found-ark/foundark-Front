import Hangul from 'hangul-js'


const ellaSingle = {
    'ㄱ':[[0,0,100,100]],
    'ㄴ':[[100,0,100,100]],
    'ㄷ':[[200,0,100,100]],
    'ㄹ':[[300,0,100,100]],
    'ㅁ':[[400,0,100,100]],
    'ㅂ':[[500,0,100,100]],
    'ㅅ':[[600,0,100,100]],
    'ㅇ':[[700,0,100,100]],
    'ㅈ':[[800,0,100,100]],
    'ㅊ':[[900,0,100,100]],

    'ㅋ':[[0,100,100,100]],
    'ㅌ':[[100,100,100,100]],
    'ㅍ':[[200,100,100,100]],
    'ㅎ':[[300,100,100,100]],

    'ㅏ':[[0,200,100,100]],
    'ㅑ':[[100,200,100,100]],
    'ㅓ':[[200,200,100,100]],
    'ㅕ':[[300,200,100,100]],
    'ㅗ':[[400,200,100,100]],
    'ㅛ':[[500,200,100,100]],
    'ㅜ':[[600,200,100,100]],
    'ㅠ':[[700,200,100,100]],
    'ㅡ':[[800,200,100,100]],
    'ㅣ':[[900,200,100,100]],
}

const ellaSVGdraw = ellaSVG()

/**
 * 한글자씩 canvas에 출력
 * @param {*} input 
 * @param {*} canvas 
 */
export function drawElla(inputs,canvas){
    //실제 엘라어가 아니라 입력된것(가상 키보드)의 전체를 읽어서 다시 번역해주는것

    canvas.setAttribute("width", 1000);
    canvas.setAttribute("height", 150);
    //canvas 그리기 객체
    const ctx = canvas.getContext("2d");
    //크기조절
    ctx.scale(0.5,0.5)

    //canvas현재 위치
    let curX = 0 
    let curY = 0
    let drawWidth = 100
    let drawHeight = 100
    //줄 단위로 번역 시작
    inputs.forEach((line,i)=>{
        line.forEach(word=>{
            if(ellaSVGdraw[word]!==undefined){
                ctx.save()
                ctx.translate(curX,curY);
                ctx.fillStyle = "orange";
                ellaSVGdraw[word](ctx)
                ctx.restore()
                curX+=drawWidth
            }
        })
        curX=0
        curY+=drawHeight
    })
}
/**
 * 분리된 한글들을 조합해서 출력
 * @param {*} inputs 
 * @returns 
 */
export function sepHan2Str(inputs,outDiv){
    let result = []
    
    //원래 방향으로 돌리기
    inputs.forEach((line)=>{
        let lineTmp = [...line].reverse()
        //ㅏㅣ,ㅓㅣ,ㅕㅣ,ㅑㅣ 는 조합해준다.
        lineTmp = combHan(lineTmp)
        let lineResult = Hangul.assemble(lineTmp)
        //ㄲ인지 ㄱ인지 확인
            // 만들어진 test에서 ㄱ이 혼자 있으면 ㄲ으로 바꿔준다.
        result.push(lineResult)
    })

    
    outDiv.innerText = result.join("\n")
    return result
}

/**
 * 입력된 한글을 분리
 * @param {*} input
 * @returns 
 */
 export function Str2sepHan(input){
    let result = []
    //줄 단위로 한글 조합
    input = input.replace(/ /g,"")//빈칸제거 
    let inputs = input.split("\n")//줄바꿈 단위로 진행

    inputs.forEach((line)=>{
        //분리
        let lineDis = Hangul.disassemble(line); 
        //ㄲ,ㄸ,ㅃ,ㅆ,ㅉ,ㅐ,ㅒ,ㅔ,ㅖ 분리
        seprateHan(lineDis)
        //역방향
        lineDis.reverse()
        result.push(lineDis)
    })
    return result
}
function combHan(arr){
    let result = []
    let i=0
    while(i<arr.length){
        if(arr[i]==="ㅏ" && i<arr.length-1 &&arr[i+1]==="ㅣ"){
            result.push("ㅐ")
            i+=2
        }else if(arr[i]==="ㅑ" && i<arr.length-1 &&arr[i+1]==="ㅣ"){
            result.push("ㅒ")
            i+=2
        }else if(arr[i]==="ㅓ" && i<arr.length-1 &&arr[i+1]==="ㅣ"){
            result.push("ㅔ")
            i+=2
        }else if(arr[i]==="ㅕ" && i<arr.length-1 &&arr[i+1]==="ㅣ"){
            result.push("ㅖ")
            i+=2
        }else{
            result.push(arr[i])
            i+=1
        }
    }
    return result
    
}
function seprateHan(arr){
    while(arr.indexOf("ㄲ") != -1){
        arr.splice(arr.indexOf("ㄲ"),1,'ㄱ','ㄱ'); 
    }
    while(arr.indexOf("ㄸ") != -1){
        arr.splice(arr.indexOf("ㄸ"),1,'ㄷ','ㄷ'); 
    }
    while(arr.indexOf("ㅃ") != -1){
        arr.splice(arr.indexOf("ㅃ"),1,'ㅂ','ㅂ'); 
    }
    while(arr.indexOf("ㅆ") != -1){
        arr.splice(arr.indexOf("ㅆ"),1,'ㅅ','ㅅ'); 
    }
    while(arr.indexOf("ㅉ") != -1){
        arr.splice(arr.indexOf("ㅉ"),1,'ㅈ','ㅈ'); 
    }
    while(arr.indexOf("ㅐ") != -1){
        arr.splice(arr.indexOf("ㅐ"),1,'ㅏ','ㅣ'); 
    }
    while(arr.indexOf("ㅒ") != -1){
        arr.splice(arr.indexOf("ㅒ"),1,'ㅑ','ㅣ'); 
    }
    while(arr.indexOf("ㅔ") != -1){
        arr.splice(arr.indexOf("ㅔ"),1,'ㅓ','ㅣ'); 
    }
    while(arr.indexOf("ㅖ") != -1){
        arr.splice(arr.indexOf("ㅖ"),1,'ㅕ','ㅣ'); 
    }
}


function ellaSVG(){ 
    //ㄱ
    let r = (ctx)=>{
        let path1 = new Path2D("M33.5 49C35.5 31.8 20.5 16 7.5 4C22.5 13.5 38.5 20 41 46.5C43.1159 68.9286 16 82 4 84.5C13 79.8333 31.5 66.2 33.5 49Z")
        let path2 = new Path2D("M52.0001 16.5004C21.2001 8.90039 19.8334 52.0004 23 74.5004H19.0001C16.5001 50.0002 14.9146 23.7057 29.0001 13.0005C41.5001 3.50024 60.6667 13.3336 71.0001 20.0003C59.4001 16.8003 57.8334 17.3338 58.0001 18.0005V81.0005H61.0001V85.0005H49.0001V81.0005H52.0001V16.5004Z")
        ctx.fill(path1);
        ctx.fill(path2);
    }
    //ㄴ
    let s = (ctx)=>{
        let path1 = new Path2D("M21.3945 2C17.7945 8 9.5612 12.8333 5.89453 14.5C7.09453 14.5 11.7279 13.5 13.8945 13V75C13.8945 75 45.8945 49.6667 62.3945 38C47.1945 42.4 28.7279 52.5 21.3945 57V2Z")
        let path2 = new Path2D("M25.3946 87.5C42.2393 87.5 55.8946 74.0685 55.8946 57.5C55.8946 40.9315 42.2393 27.5 25.3946 27.5C14.8001 27.5 5.46725 32.8132 2.56622e-06 40.8784C4.64034 36.3307 11.1662 33.5 18.3946 33.5C32.4779 33.5 43.8946 44.2452 43.8946 57.5C43.8946 70.7548 32.4779 81.5 18.3946 81.5C11.1662 81.5 4.64033 78.6693 0 74.1216C5.46725 82.1868 14.8001 87.5 25.3946 87.5Z")
        ctx.fill(path1);
        ctx.fill(path2);
    }
    //ㄷ
    let e = (ctx)=>{
        let path1 = new Path2D("M42.0001 68C55.8072 68 67.0001 56.8071 67.0001 43C67.0001 29.1929 55.8072 18 42.0001 18C33.5454 18 26.071 22.1969 21.5465 28.6209C25.5193 25.1453 30.9771 23 37.0001 23C49.1504 23 59.0001 31.7304 59.0001 42.5C59.0001 53.2696 49.1504 62 37.0001 62C30.1476 62 24.0267 59.223 19.9919 54.8695C24.2177 62.6883 32.4886 68 42.0001 68Z")
        let path2 = new Path2D("M57 8.04181C52.0839 6.08332 46.6767 5 41 5C18.3563 5 0 22.237 0 43.5C0 64.763 18.3563 82 41 82C46.6767 82 52.0839 80.9167 57 78.9582V76.7616C55.3604 76.919 53.6919 77 52 77C28.804 77 10 61.7777 10 43C10 24.2223 28.804 9 52 9C53.6919 9 55.3604 9.08099 57 9.23843V8.04181Z")
        let arc = new Path2D(); 
        arc.arc(26, 42, 7, 0, Math.PI * 2, false);  //적용할 내용
        let rec1 = new Path2D() 
        rec1.rect(52, 77, 5, 9);  
        let rec2 = new Path2D(); 
        rec2.rect(52, 0, 5, 9);  
        ctx.fill(path1);
        ctx.fill(path2);
        ctx.fill(arc)
        ctx.fill(rec1)
        ctx.fill(rec2)
    }

    //ㄹ
    let f = (ctx)=>{
        let path1 = new Path2D("M14.2308 0C14.7308 8.33333 23.0308 24.8 52.2308 24L24.7308 42.5C28.8974 46.5 37.8308 56.8 40.2308 66C44.2308 72.8333 54.7308 86.7 64.7308 87.5H14.2308C-0.26922 80.3333 -16.2692 58.4 35.7308 28C26.7308 26.1667 9.83078 18 14.2308 0ZM19.7308 46.5C8.89744 56.1667 -5.96923 77 21.2308 83C31.5641 79.1667 45.7308 66.5 19.7308 46.5ZM39.2308 75.5C38.7308 77.1667 36.8308 81 33.2308 83H47.2308C45.5641 82.1667 41.6308 79.5 39.2308 75.5Z")
        ctx.fill(path1);
    }
    //ㅁ
    let a = (ctx)=>{
        let path1 = new Path2D("M25.2641 25.6853C14.4902 10.2879 5.8111 3.54826 2 2C9.46212 10.6493 15.4382 18.6424 20.1912 25.9451C9.72484 25.6176 5.60507 19.4457 5 14C3.74623 28.6273 12.5354 32.5203 23.7116 31.5956C37.9509 55.5393 38.4397 71.1446 36 77L33 80L39 89C39 80.2 58.3333 64.3333 68 57.5C62.4 55.9 50.6667 64.5 45.5 69V52.5C44.7 48.1 54.8333 32 60 24.5L68 21.5V6.5C48.7404 19.1239 34.9433 24.4791 25.2641 25.6853ZM29 31L39 48.5C42.3212 40.4342 49.5143 24.5346 52.9748 22.2477C53.155 22.1631 53.3302 22.0805 53.5 22C53.3365 22.0409 53.161 22.1245 52.9748 22.2477C46.435 25.3175 33.282 31 29 31Z")
        let path2 = new Path2D("M2 2L2.18819 1.53677L0.266422 0.756049L1.62142 2.32662L2 2ZM25.2641 25.6853L24.8544 25.9719L25.0271 26.2187L25.3259 26.1814L25.2641 25.6853ZM20.1912 25.9451L20.1756 26.4449L21.1325 26.4748L20.6103 25.6724L20.1912 25.9451ZM5 14L5.49694 13.9448L4.93579 8.89441L4.50183 13.9573L5 14ZM23.7116 31.5956L24.1414 31.34L23.9817 31.0715L23.6704 31.0973L23.7116 31.5956ZM36 77L36.3536 77.3536L36.4235 77.2836L36.4615 77.1923L36 77ZM33 80L32.6464 79.6464L32.3566 79.9363L32.584 80.2774L33 80ZM39 89L38.584 89.2774L39.5 90.6514V89H39ZM68 57.5L68.2886 57.9083L69.1407 57.3059L68.1374 57.0192L68 57.5ZM45.5 69H45V70.0985L45.8284 69.377L45.5 69ZM45.5 52.5H46V52.4549L45.9919 52.4106L45.5 52.5ZM60 24.5L59.8244 24.0318L59.6774 24.087L59.5882 24.2163L60 24.5ZM68 21.5L68.1756 21.9682L68.5 21.8465V21.5H68ZM68 6.5H68.5V5.57443L67.7259 6.08182L68 6.5ZM39 48.5L38.5659 48.7481L39.0731 49.6357L39.4623 48.6904L39 48.5ZM29 31V30.5H28.1384L28.5659 31.2481L29 31ZM53.5 22L53.714 22.4519L58.2774 20.2903L53.3787 21.5149L53.5 22ZM25.2641 25.6853L25.6738 25.3986L25.5011 25.1519L25.2023 25.1891L25.2641 25.6853ZM54.5 21.5L54.732 21.9429L54.2969 21.0431L54.5 21.5ZM23.7116 31.5956L23.2819 31.8511L23.4415 32.1196L23.7529 32.0939L23.7116 31.5956ZM20.1912 25.9451L20.2068 25.4454L19.2499 25.4154L19.7721 26.2179L20.1912 25.9451ZM1.81181 2.46323C3.63228 3.2028 6.70127 5.22532 10.6761 9.01127C14.6414 12.7881 19.4835 18.2961 24.8544 25.9719L25.6738 25.3986C20.2708 17.6771 15.3864 12.1166 11.3658 8.28716C7.35492 4.46688 4.17882 2.34546 2.18819 1.53677L1.81181 2.46323ZM20.6103 25.6724C15.8438 18.349 9.85389 10.3379 2.37858 1.67338L1.62142 2.32662C9.07036 10.9606 15.0326 18.9358 19.7721 26.2179L20.6103 25.6724ZM4.50306 14.0552C4.81677 16.8786 6.04269 19.899 8.55552 22.2565C11.0727 24.6181 14.8423 26.278 20.1756 26.4449L20.2068 25.4454C15.0737 25.2847 11.5503 23.6949 9.23972 21.5272C6.9248 19.3554 5.7883 16.567 5.49694 13.9448L4.50306 14.0552ZM23.6704 31.0973C18.1293 31.5558 13.2928 30.8068 10.0024 28.2358C6.74314 25.6891 4.88003 21.2544 5.49817 14.0427L4.50183 13.9573C3.86621 21.3729 5.77078 26.1984 9.3867 29.0238C12.9716 31.8249 18.1177 32.5601 23.7529 32.0939L23.6704 31.0973ZM36.4615 77.1923C37.7361 74.1334 38.2072 68.6535 36.5998 60.9784C34.9892 53.288 31.2833 43.3493 24.1414 31.34L23.2819 31.8511C30.3792 43.7855 34.0374 53.6214 35.6211 61.1834C37.208 68.7607 36.7037 74.0112 35.5385 76.8077L36.4615 77.1923ZM33.3536 80.3536L36.3536 77.3536L35.6464 76.6464L32.6464 79.6464L33.3536 80.3536ZM39.416 88.7226L33.416 79.7226L32.584 80.2774L38.584 89.2774L39.416 88.7226ZM67.7114 57.0917C62.8629 60.5191 55.5908 66.211 49.525 72.1554C46.4929 75.1269 43.7497 78.1736 41.761 81.0417C39.7847 83.8918 38.5 86.6403 38.5 89H39.5C39.5 86.9597 40.632 84.4249 42.5828 81.6115C44.5212 78.8159 47.2155 75.8189 50.225 72.8696C56.2425 66.9724 63.4704 61.3142 68.2886 57.9083L67.7114 57.0917ZM45.8284 69.377C48.3951 67.1415 52.595 63.8865 56.8407 61.3937C58.9641 60.1469 61.0835 59.1 63.0056 58.4637C64.9414 57.8229 66.6077 57.6222 67.8626 57.9808L68.1374 57.0192C66.5924 56.5778 64.692 56.8521 62.6913 57.5144C60.6769 58.1812 58.4901 59.2656 56.3343 60.5313C52.0217 63.0635 47.7715 66.3585 45.1716 68.623L45.8284 69.377ZM45 52.5V69H46V52.5H45ZM59.5882 24.2163C56.999 27.9749 53.165 33.8886 50.076 39.4187C48.5321 42.1826 47.168 44.862 46.2388 47.1342C45.7743 48.27 45.414 49.3148 45.1953 50.2243C44.9791 51.1234 44.8894 51.937 45.0081 52.5894L45.9919 52.4106C45.9106 51.963 45.9625 51.311 46.1676 50.4581C46.3701 49.6157 46.7106 48.6222 47.1644 47.5127C48.0716 45.2943 49.4137 42.6549 50.949 39.9063C54.0184 34.4114 57.8343 28.5251 60.4118 24.7837L59.5882 24.2163ZM67.8244 21.0318L59.8244 24.0318L60.1756 24.9682L68.1756 21.9682L67.8244 21.0318ZM67.5 6.5V21.5H68.5V6.5H67.5ZM25.3259 26.1814C35.1151 24.9615 48.9876 19.5598 68.2741 6.91818L67.7259 6.08182C48.4932 18.6881 34.7715 23.9966 25.2023 25.1891L25.3259 26.1814ZM39.4341 48.2519L29.4341 30.7519L28.5659 31.2481L38.5659 48.7481L39.4341 48.2519ZM52.6991 21.8305C52.2008 22.1598 51.6711 22.707 51.1262 23.3895C50.5757 24.0791 49.9867 24.9365 49.3745 25.9149C48.1498 27.872 46.8145 30.3415 45.4883 32.9824C42.8352 38.2657 40.2014 44.269 38.5377 48.3096L39.4623 48.6904C41.1198 44.6652 43.7432 38.6859 46.382 33.4312C47.7018 30.803 49.0212 28.3647 50.2222 26.4454C50.8228 25.4856 51.3895 24.6626 51.9077 24.0134C52.4315 23.3572 52.8835 22.9073 53.2504 22.6648L52.6991 21.8305ZM53.286 21.5481C53.1167 21.6283 52.942 21.7107 52.7623 21.795L53.1872 22.7003C53.3679 22.6154 53.5437 22.5326 53.714 22.4519L53.286 21.5481ZM53.2504 22.6648C53.406 22.562 53.5292 22.5081 53.6213 22.4851L53.3787 21.5149C53.1439 21.5736 52.9161 21.6871 52.6991 21.8305L53.2504 22.6648ZM29 31.5C30.1504 31.5 31.8371 31.1244 33.7764 30.5431C35.7315 29.9571 37.9951 29.1457 40.3219 28.241C44.9764 26.4314 49.9103 24.2385 53.1872 22.7003L52.7623 21.795C49.4994 23.3267 44.587 25.5099 39.9595 27.309C37.6454 28.2087 35.4091 29.0098 33.4893 29.5852C31.5538 30.1653 29.9906 30.5 29 30.5V31.5ZM24.8544 25.9719C25.9965 27.6041 27.1624 29.3342 28.3489 31.1664L29.1882 30.6229C27.9955 28.7809 26.8229 27.0408 25.6738 25.3986L24.8544 25.9719ZM28.3489 31.1664C28.9059 32.0266 29.4674 32.9094 30.0332 33.815L30.8813 33.2853C30.3127 32.375 29.7483 31.4877 29.1882 30.6229L28.3489 31.1664ZM39.4699 48.6709C41.0808 44.241 43.7122 38.238 46.5051 33.0102C47.9016 30.3963 49.3334 27.9857 50.693 26.0662C52.0646 24.1298 53.323 22.7515 54.361 22.1353L53.8506 21.2754C52.6179 22.0072 51.2575 23.5392 49.877 25.4882C48.4844 27.4542 47.0307 29.9043 45.6231 32.539C42.8079 37.8085 40.1571 43.8548 38.5301 48.3291L39.4699 48.6709ZM54.361 22.1353C54.4801 22.0646 54.5942 22.0053 54.7031 21.9569L54.2969 21.0431C54.1481 21.1092 53.9992 21.1872 53.8506 21.2754L54.361 22.1353ZM54.268 21.0571C54.1382 21.1251 54.0074 21.1932 53.8758 21.2614L54.3358 22.1493C54.4688 22.0804 54.6009 22.0116 54.732 21.9429L54.268 21.0571ZM52.584 21.9192C45.7702 25.3293 36.8995 28.8496 28.6757 30.4033L28.8614 31.386C37.207 29.8092 46.1687 26.2481 53.0315 22.8135L52.584 21.9192ZM28.6757 30.4033C26.9692 30.7258 25.2928 30.963 23.6704 31.0973L23.7529 32.0939C25.4148 31.9564 27.1259 31.7138 28.8614 31.386L28.6757 30.4033ZM20.1756 26.4449C21.7528 26.4943 23.4667 26.4131 25.3259 26.1814L25.2023 25.1891C23.3893 25.4151 21.7274 25.493 20.2068 25.4454L20.1756 26.4449ZM24.1414 31.34C23.0467 29.4993 21.8713 27.6099 20.6103 25.6724L19.7721 26.2179C21.026 28.1444 22.1943 30.0224 23.2819 31.8511L24.1414 31.34Z")
        ctx.fill(path1,"evenodd");
        ctx.fill(path2);
    }
    //ㅂ
    let q = (ctx)=>{
        let path1 = new Path2D("M12.2958 4.64789C20.6338 4.12676 30.5352 2.04225 34.1831 1C31.0563 4.64789 25.3239 7.25352 25.3239 7.25352C36.2676 23.9296 30.0141 35.9155 28.4507 46.338C49.8169 43.2113 52.9437 48.4225 56.5915 50.507C56.5915 44.2535 48.7746 31.7465 45.6479 27.5775C70.662 48.4225 65.4507 64.5775 65.4507 75C51.3803 42.6901 19.5915 53.6338 5 65.6197C33.662 33.3099 26.3662 12.9859 12.2958 4.64789Z")
        let path2 = new Path2D()
        path2.arc(39.9156, 35.3946, 4.16901, 0, Math.PI * 2, false)
        ctx.fill(path1);
        ctx.fill(path2);
    }
    //ㅅ
    let t = (ctx)=>{
        let path1 = new Path2D("M3.15993 72.9928C12.9933 69.3261 33.6599 60.9927 36.6599 24.9928C36.1599 18.1594 37.2599 3.89278 45.6599 1.49278C45.7433 1.47194 45.8449 1.44068 45.9549 1.40681C46.7251 1.16982 47.9099 0.805244 46.1599 2.99268C45.1888 3.84243 44.8365 4.78061 44.5237 5.61403C44.407 5.92485 44.2957 6.22109 44.1599 6.49275C43.9933 7.15942 44.2599 8.39275 46.6599 7.99275C49.4933 3.32609 57.9599 -3.70725 69.1599 5.49275C73.4933 10.1594 77.6599 24.9928 61.6599 29.9927C62.6599 33.826 65.3599 44.8927 64.1599 58.4927C64.1947 58.9793 64.227 59.4442 64.258 59.8889C64.672 65.8403 64.8338 68.1665 67.1599 70.4927C68.4933 71.8261 68.6599 75.2785 63.6599 70.9927C61.3266 68.9926 58.8338 63.9927 57.6599 45.9927C57.1599 38.326 52.5599 20.7927 42.1599 15.9927C44.6599 37.9927 42.6599 61.9927 8.15991 73.4927C4.15991 74.326 -2.44007 74.9929 3.15993 72.9928ZM49.6599 9.99261C52.9932 13.1593 60.0599 20.7926 61.6599 25.9926C64.8266 24.1593 69.5599 18.3926 63.1599 9.99261C61.1599 7.99261 55.6599 5.19261 49.6599 9.99261Z")
        let path2 = new Path2D("M36.6599 24.9928L37.1582 25.0343L37.1615 24.9953L37.1586 24.9563L36.6599 24.9928ZM3.15993 72.9928L3.32812 73.4637L3.33462 73.4613L3.15993 72.9928ZM45.6599 1.49278L45.5387 1.00771L45.5306 1.00973L45.5226 1.01202L45.6599 1.49278ZM45.9549 1.40681L46.102 1.8847V1.8847L45.9549 1.40681ZM46.1599 2.99268L46.4892 3.36897L46.5226 3.33971L46.5504 3.30502L46.1599 2.99268ZM44.5237 5.61403L44.9918 5.78977V5.78977L44.5237 5.61403ZM44.1599 6.49275L43.7127 6.26916L43.6882 6.31825L43.6749 6.37148L44.1599 6.49275ZM46.6599 7.99275L46.7421 8.48595L46.9683 8.44825L47.0873 8.25224L46.6599 7.99275ZM69.1599 5.49275L69.5263 5.15253L69.5034 5.1278L69.4773 5.10639L69.1599 5.49275ZM61.6599 29.9927L61.5108 29.5154L61.0558 29.6576L61.1761 30.1189L61.6599 29.9927ZM64.1599 58.4927L63.6619 58.4487L63.6584 58.4885L63.6612 58.5283L64.1599 58.4927ZM64.258 59.8889L64.7568 59.8542L64.258 59.8889ZM67.1599 70.4927L66.8064 70.8462L67.1599 70.4927ZM63.6599 70.9927L63.3345 71.3723L63.6599 70.9927ZM57.6599 45.9927L58.1589 45.9601L57.6599 45.9927ZM42.1599 15.9927L42.3694 15.5387L41.5628 15.1664L41.6631 16.0491L42.1599 15.9927ZM8.15991 73.4927L8.26189 73.9822L8.2904 73.9762L8.31803 73.967L8.15991 73.4927ZM61.6599 25.9926L61.182 26.1397L61.3668 26.7401L61.9104 26.4253L61.6599 25.9926ZM49.6599 9.99261L49.3476 9.60218L48.8999 9.96029L49.3155 10.3551L49.6599 9.99261ZM63.1599 9.99261L63.5576 9.68959L63.5372 9.66284L63.5135 9.63906L63.1599 9.99261ZM36.1617 24.9513C34.6699 42.8526 28.7928 53.8231 22.112 60.7712C15.4233 67.7275 7.88876 70.6959 2.98524 72.5243L3.33462 73.4613C8.26444 71.623 15.9799 68.5913 22.8328 61.4643C29.6937 54.329 35.65 43.1329 37.1582 25.0343L36.1617 24.9513ZM45.5226 1.01202C41.0553 2.28838 38.6125 6.69061 37.3394 11.4511C36.0586 16.2405 35.9085 21.5742 36.1613 25.0293L37.1586 24.9563C36.9114 21.578 37.0613 16.3618 38.3055 11.7095C39.5574 7.02828 41.8646 3.09717 45.7973 1.97354L45.5226 1.01202ZM45.8079 0.928928C45.6935 0.964135 45.6062 0.990824 45.5387 1.00771L45.7812 1.97785C45.8804 1.95305 45.9963 1.91722 46.102 1.8847L45.8079 0.928928ZM46.5504 3.30502C46.994 2.75041 47.2799 2.32393 47.4294 1.99616C47.5034 1.83395 47.5615 1.65873 47.5669 1.48244C47.5728 1.28908 47.5131 1.07371 47.3325 0.915001C47.1723 0.77418 46.983 0.738185 46.8557 0.72898C46.722 0.719306 46.5876 0.734393 46.4725 0.754378C46.2431 0.794182 45.9926 0.87207 45.8079 0.928928L46.102 1.8847C46.3023 1.82306 46.4887 1.7665 46.6435 1.73965C46.7203 1.72631 46.7648 1.72501 46.7836 1.72637C46.8089 1.7282 46.7458 1.73066 46.6724 1.66617C46.5787 1.58379 46.5664 1.48263 46.5674 1.45183C46.5678 1.43811 46.5685 1.47379 46.5195 1.5813C46.423 1.79299 46.2008 2.14123 45.7695 2.68033L46.5504 3.30502ZM44.9918 5.78977C45.3032 4.96007 45.6203 4.12922 46.4892 3.36897L45.8307 2.61639C44.7572 3.55564 44.3698 4.60115 44.0556 5.43829L44.9918 5.78977ZM44.6072 6.71634C44.7568 6.41708 44.877 6.09543 44.9918 5.78977L44.0556 5.43829C43.9369 5.75426 43.8347 6.02511 43.7127 6.26916L44.6072 6.71634ZM46.5777 7.49955C45.4412 7.68898 44.9761 7.4622 44.7988 7.28706C44.6208 7.11116 44.5879 6.84235 44.645 6.61402L43.6749 6.37148C43.5653 6.80982 43.5824 7.49101 44.096 7.99844C44.6104 8.50663 45.4787 8.69652 46.7421 8.48595L46.5777 7.49955ZM69.4773 5.10639C63.7682 0.416777 58.6804 -0.183506 54.6253 1.06488C50.6076 2.30177 47.6944 5.32551 46.2325 7.73326L47.0873 8.25224C48.4588 5.99333 51.1956 3.16706 54.9195 2.02062C58.6061 0.885677 63.3517 1.36873 68.8426 5.87912L69.4773 5.10639ZM61.809 30.4699C65.8832 29.1968 68.712 27.2849 70.5765 25.0301C72.4416 22.7747 73.3174 20.2056 73.5331 17.66C73.9622 12.5976 71.7852 7.5851 69.5263 5.15253L68.7935 5.83298C70.868 8.06705 72.941 12.8045 72.5367 17.5755C72.3358 19.9465 71.5241 22.3149 69.8058 24.3928C68.087 26.4714 65.4366 28.2886 61.5108 29.5154L61.809 30.4699ZM64.658 58.5366C65.8655 44.8521 63.1491 33.7203 62.1437 29.8665L61.1761 30.1189C62.1708 33.9317 64.8544 44.9333 63.6619 58.4487L64.658 58.5366ZM64.7568 59.8542C64.7258 59.4096 64.6935 58.9442 64.6587 58.4571L63.6612 58.5283C63.6959 59.0144 63.7282 59.4789 63.7592 59.9236L64.7568 59.8542ZM67.5135 70.1391C65.3447 67.9702 65.1745 65.8586 64.7568 59.8542L63.7592 59.9236C64.1695 65.822 64.323 68.3628 66.8064 70.8462L67.5135 70.1391ZM63.3345 71.3723C64.5999 72.4569 65.5779 73.0878 66.3231 73.3764C67.0419 73.6548 67.7415 73.6769 68.1671 73.1722C68.5432 72.7264 68.4962 72.0846 68.36 71.6006C68.2136 71.0804 67.912 70.5376 67.5135 70.1391L66.8064 70.8462C67.0746 71.1144 67.2938 71.5032 67.3974 71.8715C67.5112 72.2758 67.4433 72.4794 67.4027 72.5275C67.3965 72.5349 67.3741 72.5634 67.2773 72.571C67.1673 72.5796 66.9774 72.5574 66.6842 72.4439C66.0961 72.2161 65.22 71.6714 63.9853 70.6131L63.3345 71.3723ZM57.161 46.0252C57.7489 55.0392 58.6685 60.8294 59.744 64.6288C60.8207 68.4321 62.066 70.285 63.3345 71.3723L63.9853 70.6131C62.9205 69.7003 61.7527 68.0532 60.7062 64.3565C59.6586 60.6559 58.7449 54.9462 58.1589 45.9601L57.161 46.0252ZM41.9504 16.4467C46.9777 18.7669 50.6641 24.2054 53.1619 30.1124C55.6528 36.0029 56.9147 42.2481 57.161 46.0252L58.1589 45.9601C57.9052 42.0706 56.6171 35.7158 54.0829 29.7229C51.5558 23.7466 47.7421 18.0184 42.3694 15.5387L41.9504 16.4467ZM8.31803 73.967C25.674 68.1817 34.9245 59.223 39.4923 48.8822C44.0478 38.569 43.9092 26.9582 42.6567 15.9362L41.6631 16.0491C42.9106 27.0272 43.022 38.4164 38.5775 48.4781C34.1453 58.5123 25.1458 67.3037 8.0018 73.0183L8.31803 73.967ZM2.99176 72.5219C2.28458 72.7745 1.75451 72.9903 1.38164 73.1743C1.19581 73.266 1.03718 73.3555 0.911262 73.4442C0.79923 73.523 0.655972 73.6397 0.571929 73.8024C0.524876 73.8935 0.485594 74.0204 0.505055 74.1683C0.524995 74.3199 0.599136 74.4369 0.679614 74.5171C0.818278 74.6552 0.999465 74.7094 1.10995 74.7359C1.35838 74.7953 1.69924 74.8105 2.06711 74.8052C3.56353 74.7837 6.24924 74.4015 8.26189 73.9822L8.05793 73.0032C6.07059 73.4172 3.45631 73.7851 2.05273 73.8053C1.69561 73.8105 1.46147 73.7918 1.34271 73.7634C1.2696 73.7459 1.31915 73.7427 1.38535 73.8086C1.4296 73.8527 1.48231 73.9299 1.49651 74.0379C1.51024 74.1422 1.48092 74.2216 1.46043 74.2613C1.42951 74.3212 1.40578 74.319 1.48691 74.2619C1.55416 74.2145 1.66233 74.1509 1.82415 74.0711C2.14659 73.9119 2.63528 73.7111 3.3281 73.4636L2.99176 72.5219ZM62.1378 25.8456C61.3074 23.1468 59.0859 19.8747 56.6991 16.9162C54.3 13.9425 51.6846 11.2264 50.0043 9.63011L49.3155 10.3551C50.9686 11.9255 53.5531 14.6094 55.9208 17.5441C58.3006 20.4939 60.4124 23.6384 61.182 26.1397L62.1378 25.8456ZM62.7622 10.2956C65.8864 14.3962 66.2441 17.7774 65.5167 20.3175C64.781 22.8868 62.9077 24.6925 61.4094 25.5599L61.9104 26.4253C63.5788 25.4594 65.6555 23.4651 66.4781 20.5928C67.309 17.6912 66.8334 13.989 63.5576 9.68959L62.7622 10.2956ZM49.9723 10.383C52.8658 8.06822 55.6017 7.60786 57.837 7.93727C60.0932 8.26976 61.8728 9.41263 62.8064 10.3462L63.5135 9.63906C62.447 8.5726 60.4767 7.31547 57.9828 6.94796C55.4681 6.57736 52.454 7.11701 49.3476 9.60218L49.9723 10.383Z")
        ctx.fill(path1);
        ctx.fill(path2);
    }
    //ㅇ
    let d = (ctx)=>{
        let path1 = new Path2D("M74.1812 55.8519C67.894 68.9538 54.5034 78 39 78C17.4609 78 0 60.5391 0 39C0 17.4609 17.4609 0 39 0C47.7237 0 55.7785 2.86428 62.2751 7.7037H52.5756C50.0785 7.0746 47.4666 6.74074 44.7778 6.74074C26.9615 6.74074 12.5185 21.3993 12.5185 39.4815C12.5185 57.5637 26.9615 72.2222 44.7778 72.2222C56.7183 72.2222 67.1435 65.6381 72.7213 55.8519H74.1812Z")
        let path2 = new Path2D()
        path2.rect(53.9258,6.74072,11.5556,0.962963)
        let path3 = new Path2D("M74.6297 53.4442L73.6667 55.8516C72.7037 57.6171 70.9704 60.6664 71.7408 58.7405C72.5111 56.8146 72.7037 55.3702 72.7037 54.8887L65.299 54.4259C65.1309 54.4154 65 54.276 65 54.1077C65 54.0057 65.08 53.9217 65.1818 53.9166L74.6297 53.4442Z")
        let path4 = new Path2D("M65 7.22201C61.9507 6.74052 54.9852 5.58497 51.5186 2.88867M73.6667 55.8516L74.6297 53.4442L65.1818 53.9166C65.08 53.9217 65 54.0057 65 54.1077V54.1077C65 54.276 65.1309 54.4154 65.299 54.4259L72.7037 54.8887C72.7037 55.3702 72.5111 56.8146 71.7408 58.7405C70.9704 60.6664 72.7037 57.6171 73.6667 55.8516Z")
        let path5 = new Path2D()
        path5.arc(69.3334,42.3706,5.77778,0, Math.PI * 2, false)
        ctx.fill(path1);
        ctx.fill(path2);
        ctx.fill(path3);
        ctx.fill(path4);
        ctx.fill(path5);
    }
    //ㅈ
    let w = (ctx)=>{
        let path1 = new Path2D("M39.6982 34.5C18.0982 27.3 11.3649 13.1667 10.6982 7L10.1983 21C10.1983 23.8 18.5316 30.1667 22.6983 33C-9.30171 55.8 1.03162 78.5 10.1983 87L4.69829 90H32.6982C2.29825 76.4 9.69825 57 17.1982 49C49.5982 46.6 54.6982 74.3333 53.1982 88.5C63.9982 58.5 38.3649 45 24.1982 42C23.3982 37.2 34.1982 35 39.6982 34.5Z")
        ctx.fill(path1);
    }
    //ㅊ
    let c = (ctx)=>{
        let path1 = new Path2D("M22 7.98455C17.5 -0.515626 25 -0.0158683 30 2.98417C35 5.98422 37.0914 8.11891 36 12.4845C34.5 18.4844 26 22.9844 26 22.9844C21 25.9842 24.3333 29.1511 26 30.9844L46.5 35.4846C39.7 35.8846 38.3333 39.6513 38.5 41.4846C38.5 41.4846 52 45.9844 64 57.9844C67 62.4844 68 67.9846 68 67.9846L63 62.9846C48.6 55.3846 27 56.8179 18 58.4846C12.4 67.6846 18.3333 80.6513 22 85.9846C3.19991 75.5846 7.16663 57.3179 11.5 49.4846C13.1 44.2846 7.83333 35.6513 5 31.9846L25 46.9846C18.2 44.9846 20.1666 50.8179 22 53.9846H50.5L5 20.4846L13.5 24.4846L25 13.4846L22 7.98455Z")
        ctx.fill(path1);
    }
    //ㅋ
    let z = (ctx)=>{
        let path1 = new Path2D("M11.6208 13.3218C4.40288 13.3218 -9.18368 7.37763 13.7438 8.22697C19.6879 9.07613 25.8869 12.6425 30.3025 20.1152C36.1051 9.92523 56.2018 -9.60563 82.1012 8.22674C93.5649 16.1198 98.3204 37.8625 71.4869 54.5061C71.0692 54.5525 70.6035 54.6385 70.1303 54.7259C67.7177 55.1714 65.1098 55.653 67.6655 51.1095C68.3057 50.2291 69.044 49.2583 69.8374 48.215C77.4618 38.1891 90.1703 21.4777 69.7883 14.1709C69.7883 26.9082 48.9839 51.1095 29.4531 28.6067L22.6599 20.1152C22.6599 20.1152 18.8386 13.3218 11.6208 13.3218ZM37.5202 25.6347C41.4829 21.1058 53.7392 11.7085 62.5705 13.7465C62.1459 16.4355 58.9191 24.5308 51.1068 28.6068C48.8424 29.7391 41.5962 30.0504 37.5202 25.6347Z")
        let path2 = new Path2D("M13.7438 8.22697L13.8145 7.73199L13.7885 7.72828L13.7623 7.72731L13.7438 8.22697ZM30.3025 20.1152L29.8721 20.3695L30.3105 21.1115L30.737 20.3626L30.3025 20.1152ZM82.1012 8.22674L82.3848 7.81492L82.1012 8.22674ZM71.4869 54.5061L71.5421 55.0031L71.6544 54.9906L71.7504 54.931L71.4869 54.5061ZM70.1303 54.7259L70.0395 54.2342H70.0395L70.1303 54.7259ZM67.6655 51.1095L67.2611 50.8154L67.244 50.8389L67.2297 50.8643L67.6655 51.1095ZM69.8374 48.215L70.2354 48.5177L69.8374 48.215ZM69.7883 14.1709L69.9571 13.7003L69.2883 13.4605V14.1709H69.7883ZM29.4531 28.6067L29.0627 28.919L29.069 28.9268L29.0755 28.9344L29.4531 28.6067ZM22.6599 20.1152L22.2241 20.3603L22.244 20.3958L22.2694 20.4275L22.6599 20.1152ZM62.5705 13.7465L63.0644 13.8245L63.137 13.3641L62.6829 13.2593L62.5705 13.7465ZM37.5202 25.6347L37.1439 25.3054L36.848 25.6436L37.1528 25.9738L37.5202 25.6347ZM51.1068 28.6068L51.3304 29.0541L51.3381 29.0501L51.1068 28.6068ZM13.7623 7.72731C8.02828 7.51489 4.51843 7.72332 2.60864 8.17833C2.12726 8.29302 1.7286 8.42757 1.414 8.58529C1.10447 8.74046 0.838294 8.93695 0.672322 9.19605C0.492634 9.47656 0.456767 9.79056 0.549464 10.093C0.63505 10.3723 0.8204 10.6133 1.03095 10.816C1.45202 11.2215 2.10889 11.6014 2.87114 11.9422C3.64383 12.2877 4.56491 12.6106 5.54765 12.8875C7.50879 13.4401 9.75825 13.8218 11.6208 13.8218V12.8218C9.87432 12.8218 7.71876 12.4604 5.81887 11.925C4.8711 11.6579 3.99767 11.3506 3.27935 11.0293C2.55061 10.7035 2.01998 10.3802 1.72459 10.0957C1.5769 9.95348 1.52177 9.85284 1.50557 9.79998C1.49648 9.77033 1.49752 9.76176 1.51437 9.73545C1.54494 9.68773 1.63494 9.59315 1.86216 9.47924C2.0843 9.36788 2.40296 9.25532 2.8404 9.1511C4.60592 8.73046 7.99555 8.51437 13.7253 8.72662L13.7623 7.72731ZM30.733 19.8608C26.2428 12.2621 19.914 8.60335 13.8145 7.73199L13.6731 8.72194C19.4619 9.54891 25.5309 13.023 29.8721 20.3695L30.733 19.8608ZM82.3848 7.81492C69.2904 -1.20088 57.6081 -0.791107 48.4653 3.20443C39.3593 7.18387 32.8105 14.7004 29.868 19.8677L30.737 20.3626C33.5971 15.34 39.9979 7.99612 48.8658 4.12075C57.6968 0.261458 69.0126 -0.178011 81.8177 8.63857L82.3848 7.81492ZM71.7504 54.931C85.2614 46.5508 90.9042 36.8294 91.6537 28.1279C92.4019 19.4405 88.2601 11.8602 82.3848 7.81492L81.8177 8.63857C87.406 12.4863 91.3738 19.7239 90.6574 28.0421C89.9421 36.3461 84.5459 45.8178 71.2233 54.0812L71.7504 54.931ZM70.2211 55.2176C70.6989 55.1294 71.1458 55.0471 71.5421 55.0031L71.4317 54.0092C70.9926 54.058 70.5081 54.1477 70.0395 54.2342L70.2211 55.2176ZM67.2297 50.8643C66.5823 52.0153 66.2274 52.9049 66.1374 53.5887C66.0917 53.9364 66.1104 54.2596 66.2186 54.5451C66.3302 54.8396 66.5251 55.0613 66.7719 55.2139C67.2324 55.4985 67.8448 55.5242 68.4017 55.4866C68.9799 55.4474 69.6255 55.3276 70.2211 55.2176L70.0395 54.2342C69.4289 54.347 68.8437 54.4544 68.3342 54.4888C67.8035 54.5248 67.4712 54.4705 67.2976 54.3632C67.2275 54.3198 67.1829 54.2677 67.1537 54.1906C67.121 54.1045 67.0974 53.9584 67.1289 53.7192C67.1933 53.2294 67.4708 52.4754 68.1013 51.3546L67.2297 50.8643ZM69.4394 47.9123C68.6469 48.9545 67.9051 49.9299 67.2611 50.8154L68.0698 51.4036C68.7063 50.5284 69.4412 49.5621 70.2354 48.5177L69.4394 47.9123ZM69.6196 14.6416C74.6479 16.4442 77.5551 18.7982 79.0316 21.4091C80.5052 24.0148 80.6012 26.9608 79.8301 30.0523C78.2777 36.2765 73.2707 42.8743 69.4394 47.9123L70.2354 48.5177C74.0285 43.5298 79.188 36.7589 80.8004 30.2943C81.6118 27.0413 81.5398 23.8128 79.9021 20.9168C78.2672 18.026 75.1198 15.551 69.9571 13.7003L69.6196 14.6416ZM29.0755 28.9344C34.0168 34.6276 39.0801 37.4122 43.9217 38.1302C48.7617 38.848 53.3126 37.4906 57.2119 35.0265C61.1078 32.5645 64.3703 28.9883 66.6597 25.2243C68.945 21.467 70.2883 17.4761 70.2883 14.1709H69.2883C69.2883 17.2344 68.0311 21.0451 65.8053 24.7047C63.5835 28.3575 60.4242 31.8135 56.6777 34.1811C52.9344 36.5467 48.6223 37.8164 44.0684 37.141C39.5162 36.4659 34.6549 33.8371 29.8308 28.2789L29.0755 28.9344ZM22.2694 20.4275L29.0627 28.919L29.8436 28.2943L23.0503 19.8028L22.2694 20.4275ZM11.6208 13.8218C15.0629 13.8218 17.7077 15.44 19.5096 17.0875C20.4094 17.9102 21.0915 18.7337 21.548 19.351C21.776 19.6593 21.947 19.9151 22.0601 20.0923C22.1167 20.1809 22.1587 20.2497 22.186 20.2955C22.1997 20.3183 22.2097 20.3355 22.2161 20.3464C22.2193 20.3519 22.2215 20.3558 22.2228 20.3581C22.2235 20.3593 22.2239 20.3601 22.2241 20.3604C22.2242 20.3606 22.2243 20.3607 22.2243 20.3607C22.2243 20.3607 22.2242 20.3606 22.2242 20.3606C22.2241 20.3604 22.2241 20.3603 22.6599 20.1152C23.0956 19.87 23.0955 19.8698 23.0954 19.8696C23.0953 19.8695 23.0952 19.8693 23.0951 19.869C23.0948 19.8686 23.0945 19.8681 23.0942 19.8674C23.0934 19.8661 23.0925 19.8644 23.0913 19.8623C23.0889 19.8581 23.0855 19.8523 23.0813 19.8449C23.0727 19.8302 23.0604 19.8092 23.0443 19.7823C23.0122 19.7286 22.9651 19.6514 22.903 19.5542C22.7789 19.3599 22.595 19.085 22.352 18.7564C21.8665 18.0999 21.1421 17.2251 20.1844 16.3495C18.2712 14.6002 15.3965 12.8218 11.6208 12.8218V13.8218ZM62.6829 13.2593C58.0746 12.1958 52.6593 14.1193 47.9718 16.7937C43.2643 19.4796 39.165 22.9956 37.1439 25.3054L37.8965 25.9639C39.8381 23.7449 43.8483 20.2978 48.4674 17.6623C53.1066 15.0154 58.235 13.2591 62.458 14.2337L62.6829 13.2593ZM51.3381 29.0501C55.34 26.9621 58.1595 23.8492 60.0302 20.926C61.8958 18.0107 62.8392 15.2502 63.0644 13.8245L62.0766 13.6685C61.8771 14.9318 60.9948 17.5634 59.1879 20.387C57.3859 23.2027 54.6858 26.1755 50.8755 28.1635L51.3381 29.0501ZM37.1528 25.9738C39.2958 28.2954 42.2519 29.3552 44.9295 29.6972C47.5895 30.0369 50.0777 29.6804 51.3304 29.054L50.8832 28.1596C49.8715 28.6655 47.6044 29.0307 45.0562 28.7053C42.5256 28.3821 39.8206 27.3897 37.8876 25.2955L37.1528 25.9738Z")
        let path3 = new Path2D()
        path3.ellipse(54.9281,46.8641,7.64246,5.94413,0,0, Math.PI * 2,false)
        ctx.fill(path1,"evenodd");
        ctx.fill(path2);
        ctx.fill(path3);
    }
    //ㅌ
    let x = (ctx)=>{
        let path1 = new Path2D("M48.0001 19.5C28.0001 16.7 19.3334 6.66667 17.5001 2C13.1001 13.6 26.6667 19.5 33.5 20.5C22 24.5 18.8334 37.6667 17.5 42.5C15.9 50.9 18.5001 55 21.0001 55.5C47.4001 45.5 51.3334 63.3333 50.0001 73.5C47.2001 82.7 51.1668 81.3333 53.5001 79.5C75.1001 47.9 42.1668 45 23.0001 47.5C23.0001 47.5 23.0001 39 26.5001 33C30.0001 27 42.1668 22.1667 48.0001 19.5Z")
        let path2 = new Path2D("M31 73.5C10.6 61.1 6.49996 44 6.99996 37C0.599957 49.8 12.6666 66.6667 19.5 73.5L9.49997 85.5L31 73.5Z")
        let path3 = new Path2D()
        path3.arc(6.5,22.5,6.5,0, Math.PI * 2, false)
        ctx.fill(path1);
        ctx.fill(path2);
        ctx.fill(path3);
    }

    //ㅍ
    let v = (ctx)=>{
        let path551 = new Path2D("M9.45566 12.7126C-8.49701 -3.2887 6.36152 2.25628 15.2992 6.86986C15.7332 7.0939 16.2119 7.21681 16.7 7.19933C23.122 6.96929 27.8504 3.81792 29.4557 2.21266C31.1224 0.545997 48.9557 0.212536 49.9557 3.71319C50.9557 7.21385 62.4557 14.2127 73.9557 15.2127C80.7419 15.8028 79.4557 18.7127 77.9557 20.2127C73.1557 24.2127 61.5957 23.5926 55.9557 21.7126C53.0317 20.7379 49.1577 18.8134 47.5744 14.5499C47.4918 14.3277 47.3962 14.1074 47.2522 13.919C44.5871 10.4318 36.1004 11.672 33.271 12.6015C33.0579 12.6715 32.8562 12.7795 32.6685 12.9023C19.6472 21.4285 12.2684 15.6908 9.45566 12.7126Z")
        let path552 = new Path2D("M8.95545 54.7129C-3.44454 52.7129 2.45557 44.3796 7.45545 43.7129C14.9555 42.7129 21.7888 47.0462 24.9555 50.2129C31.9568 57.6032 44.8838 56.4518 50.9555 54.8502C51.2886 54.7623 51.6039 54.6045 51.8878 54.4094C64.9161 45.4511 76.6695 54.5001 80.9555 60.2129C81.4615 60.8876 81.6297 61.4675 81.6175 61.9375C81.593 62.8766 80.4333 63.023 79.5347 62.7488C71.6437 60.341 66.8918 61.7792 65.2066 63.0114L65.1824 63.0291C65.0163 63.1506 64.8489 63.273 64.6689 63.3723C48.667 72.1921 33.9513 67.2073 28.2535 63.4158C28.0507 63.2809 27.8708 63.1153 27.7087 62.9336C19.4262 53.6469 12.9162 55.3518 8.95545 54.7129Z")
        let path553 = new Path2D("M39.8865 27.4945C32.8123 31.1038 32.582 27.1442 37.4557 22.7135C40.6557 19.5135 44.789 20.3802 46.4557 21.2135C48.289 22.2135 52.4557 25.3135 54.4557 29.7135C56.4557 34.1135 63.289 36.5468 66.4557 37.2135C67.789 37.5468 70.5557 38.9135 70.9557 41.7135C71.3036 44.1488 67.6422 45.4998 65.0376 46.0298C64.3427 46.1712 63.628 46.0037 63.0307 45.6215L51.809 38.4396C51.5746 38.2896 51.3188 38.1771 51.0583 38.0794C47.3725 36.6966 44.8864 31.8763 44.0186 29.3974C43.9754 29.2742 43.8764 29.0551 43.8182 28.9383C43.0163 27.33 41.4873 26.6777 39.8865 27.4945Z")
        let path554 = new Path2D("M45.4556 45.7131C50.6556 36.5131 45.2889 39.213 41.4556 41.213C38.1835 42.9202 35.6397 42.1637 34.6414 41.377C34.5116 41.2748 34.3853 41.1642 34.2534 41.0647C32.3622 39.6396 31.9589 38.221 32.2096 36.9941C32.5109 35.52 32.7264 33.8542 31.6947 32.759C23.4122 23.9666 17.4814 23.3359 15.4556 24.213C6.57077 29.1885 8.60596 31.9011 11.3914 32.9119C12.0628 33.1555 12.7976 33.0163 13.4403 32.7047C16.8742 31.0403 19.477 31.0007 21.6298 33.5656C22.2051 34.251 22.2179 35.2116 22.2624 36.1054C22.4573 40.0244 28.6604 43.4589 30.9556 46.2131C35.9556 52.2131 42.912 50.2132 45.4556 45.7131Z")
        ctx.fill(path551);
        ctx.fill(path552);
        ctx.fill(path553);
        ctx.fill(path554);
    }
    //ㅎ
    let g = (ctx)=>{
        let path1 = new Path2D("M6 59.69C10.9745 57.5796 15.0445 50.1932 17.7578 23.0598C18.4361 16.2769 25.4457 9.49355 31.7768 5.42299C45.0249 -3.09478 72.4757 -0.756111 81.0693 25.3207C83.7826 32.104 82.8782 39.792 77.4515 48.3843C77.6503 48.3604 77.8636 48.3331 78.0903 48.304C82.1591 47.7817 90.5096 46.7099 95.9927 55.6199C90.2042 51.2785 79.4111 52.3036 74.7381 53.3588C63.4325 53.3588 59.8147 49.2887 50.318 37.9831C45.3435 32.8579 34.4901 28.0482 29.0634 37.9831C27.556 42.6561 28.4303 52.0021 43.9869 50.1932C38.1079 51.7006 23.1845 53.3588 23.1845 40.2443C22.883 34.5161 26.6214 24.326 43.9869 29.3909C45.6393 29.8728 47.5004 30.6511 49.4962 31.4856C57.3316 34.7621 67.2413 38.906 74.7381 29.3909C71.076 16.0053 58.9103 -0.455385 34.9424 9.94578C30.5159 12.6251 26.3501 16.2769 22.2801 23.0598C21.8136 25.7812 21.4406 28.5561 21.0716 31.3018C19.2944 44.525 17.6086 57.0686 6 59.69ZM77.4515 34.3657C76.547 37.9835 74.105 45.7617 71.5726 47.9324C68.8592 46.8772 62.7994 43.9528 60.2669 40.6968C65.9951 40.9983 71.5726 39.7924 77.4515 34.3657Z")
        let path2 = new Path2D("M17.7578 23.0598L18.2554 23.1095L17.7578 23.0598ZM6 59.69L5.80472 59.2297L0.679643 61.404L6.11013 60.1777L6 59.69ZM31.7768 5.42299L32.0472 5.84356L31.7768 5.42299ZM81.0693 25.3207L80.5944 25.4772L80.5993 25.4919L80.605 25.5064L81.0693 25.3207ZM77.4515 48.3843L77.0287 48.1173L76.4675 49.006L77.511 48.8807L77.4515 48.3843ZM78.0903 48.304L78.1539 48.7999V48.7999L78.0903 48.304ZM95.9927 55.6199L95.6927 56.0199L97.7973 57.5983L96.4185 55.3578L95.9927 55.6199ZM74.7381 53.3588V53.8588H74.7939L74.8483 53.8465L74.7381 53.3588ZM50.318 37.9831L50.7009 37.6615L50.6893 37.6478L50.6768 37.6349L50.318 37.9831ZM29.0634 37.9831L28.6246 37.7435L28.6021 37.7848L28.5876 37.8296L29.0634 37.9831ZM43.9869 50.1932L44.111 50.6775L51.2627 48.8438L43.9291 49.6965L43.9869 50.1932ZM23.1845 40.2443H23.6845V40.2311L23.6838 40.218L23.1845 40.2443ZM43.9869 29.3909L44.1269 28.9109L43.9869 29.3909ZM49.4962 31.4856L49.3033 31.9469L49.4962 31.4856ZM74.7381 29.3909L75.1309 29.7003L75.287 29.5022L75.2204 29.2589L74.7381 29.3909ZM34.9424 9.94578L34.7433 9.48711L34.7123 9.50055L34.6835 9.51803L34.9424 9.94578ZM22.2801 23.0598L21.8513 22.8025L21.8031 22.8829L21.7873 22.9753L22.2801 23.0598ZM21.0716 31.3018L21.5672 31.3684L21.0716 31.3018ZM71.5726 47.9324L71.3913 48.3984L71.6705 48.507L71.8979 48.312L71.5726 47.9324ZM77.4515 34.3657L77.9365 34.4869L78.3426 32.8626L77.1123 33.9983L77.4515 34.3657ZM60.2669 40.6968L60.2932 40.1975L59.2004 40.14L59.8723 41.0038L60.2669 40.6968ZM17.2603 23.01C15.9047 36.5664 14.2134 45.1467 12.2563 50.5893C10.3019 56.0246 8.11194 58.2509 5.80472 59.2297L6.19528 60.1503C8.86252 59.0187 11.1948 56.4966 13.1973 50.9277C15.1972 45.3662 16.8977 36.6865 18.2554 23.1095L17.2603 23.01ZM31.5064 5.00242C28.3092 7.05804 24.9348 9.80178 22.2686 12.898C19.6086 15.987 17.614 19.473 17.2603 23.01L18.2554 23.1095C18.5799 19.8637 20.4292 16.5666 23.0264 13.5505C25.6173 10.5417 28.9133 7.8585 32.0472 5.84356L31.5064 5.00242ZM81.5441 25.1642C77.1929 11.9604 68.05 4.74148 58.3076 1.91863C48.5907 -0.896866 38.2642 0.65753 31.5064 5.00242L32.0472 5.84356C38.5375 1.67068 48.5605 0.135528 58.0293 2.87912C67.4728 5.61535 76.3521 12.6042 80.5944 25.4772L81.5441 25.1642ZM77.8742 48.6513C83.3635 39.9599 84.3207 32.103 81.5335 25.135L80.605 25.5064C83.2445 32.1049 82.3928 39.6242 77.0287 48.1173L77.8742 48.6513ZM78.0266 47.808C77.7995 47.8372 77.5883 47.8643 77.3919 47.8879L77.511 48.8807C77.7123 48.8566 77.9278 48.8289 78.1539 48.7999L78.0266 47.808ZM96.4185 55.3578C93.6035 50.7834 90.03 48.7478 86.6268 47.9384C83.2465 47.1344 80.0583 47.5473 78.0266 47.808L78.1539 48.7999C80.1911 48.5384 83.2126 48.1542 86.3954 48.9113C89.5555 49.6629 92.8988 51.5463 95.5668 55.8819L96.4185 55.3578ZM74.8483 53.8465C77.1479 53.3272 80.9707 52.8126 84.9278 52.9653C88.8992 53.1184 92.9205 53.9408 95.6927 56.0199L96.2927 55.2199C93.2764 52.9577 89.0069 52.1218 84.9664 51.966C80.9115 51.8096 77.0013 52.3351 74.628 52.8711L74.8483 53.8465ZM49.9352 38.3047C54.6688 43.94 57.9932 47.8444 61.5648 50.3214C65.175 52.8253 69.0137 53.8588 74.7381 53.8588V52.8588C69.1569 52.8588 65.5339 51.8572 62.1347 49.4997C58.6968 47.1154 55.4639 43.3319 50.7009 37.6615L49.9352 38.3047ZM29.5023 38.2228C30.8154 35.8189 32.4373 34.3391 34.1855 33.5243C35.9371 32.708 37.8551 32.5408 39.7862 32.8301C43.6657 33.4112 47.528 35.8265 49.9592 38.3314L50.6768 37.6349C48.1335 35.0145 44.0819 32.4624 39.9344 31.8411C37.852 31.5292 35.7283 31.702 33.7631 32.6179C31.7947 33.5353 30.0249 35.1799 28.6246 37.7435L29.5023 38.2228ZM43.9291 49.6965C36.2363 50.5911 32.3521 48.7103 30.5295 46.2233C28.6841 43.7053 28.8136 40.3862 29.5393 38.1366L28.5876 37.8296C27.8058 40.2531 27.6188 43.9434 29.7229 46.8144C31.8497 49.7165 36.1809 51.6042 44.0446 50.6899L43.9291 49.6965ZM22.6845 40.2443C22.6845 43.6233 23.6487 46.1045 25.2357 47.877C26.816 49.642 28.9703 50.6558 31.2681 51.189C35.8478 52.2518 41.1398 51.4394 44.111 50.6775L43.8627 49.7089C40.955 50.4544 35.8458 51.2248 31.4941 50.2149C29.3262 49.7118 27.3822 48.7753 25.9807 47.2099C24.5858 45.652 23.6845 43.4225 23.6845 40.2443H22.6845ZM44.1269 28.9109C35.356 26.3527 29.8802 27.608 26.6351 30.3906C23.4117 33.1546 22.5294 37.3096 22.6852 40.2705L23.6838 40.218C23.5382 37.4508 24.3743 33.6466 27.2861 31.1497C30.1762 28.6715 35.2522 27.3641 43.8469 29.8709L44.1269 28.9109ZM49.6891 31.0244C47.7011 30.1931 45.8119 29.4023 44.1269 28.9109L43.8469 29.8709C45.4667 30.3433 47.2997 31.1091 49.3033 31.9469L49.6891 31.0244ZM74.3454 29.0814C70.707 33.6994 66.5188 34.9835 62.2732 34.736C57.9797 34.4857 53.6238 32.6697 49.6891 31.0244L49.3033 31.9469C53.2039 33.5781 57.7207 35.4723 62.215 35.7343C66.7574 35.9991 71.2725 34.5975 75.1309 29.7003L74.3454 29.0814ZM35.1414 10.4045C46.9916 5.2619 55.8384 6.78403 62.1707 11.1597C68.5369 15.5588 72.4437 22.8991 74.2558 29.5228L75.2204 29.2589C73.3705 22.4971 69.3633 14.9143 62.7392 10.337C56.081 5.73614 46.861 4.22849 34.7433 9.48711L35.1414 10.4045ZM22.7088 23.317C26.7356 16.6062 30.8422 13.012 35.2013 10.3735L34.6835 9.51803C30.1895 12.2381 25.9646 15.9476 21.8513 22.8025L22.7088 23.317ZM21.5672 31.3684C21.9364 28.6212 22.3082 25.8553 22.7729 23.1443L21.7873 22.9753C21.319 25.7072 20.9449 28.4911 20.5761 31.2352L21.5672 31.3684ZM6.11013 60.1777C12.1179 58.8211 15.5483 54.8809 17.6853 49.661C19.8093 44.473 20.6811 37.9609 21.5672 31.3684L20.5761 31.2352C19.6849 37.8658 18.8253 44.2371 16.7599 49.2821C14.7075 54.2952 11.4907 57.9375 5.88987 59.2023L6.11013 60.1777ZM71.8979 48.312C72.6002 47.7101 73.2624 46.7537 73.8706 45.6463C74.4839 44.5296 75.0637 43.2192 75.5884 41.8733C76.6377 39.1815 77.4803 36.3118 77.9365 34.4869L76.9664 34.2444C76.5182 36.0374 75.6876 38.8656 74.6567 41.5101C74.1412 42.8324 73.5792 44.0996 72.9941 45.1649C72.4039 46.2395 71.8112 47.0693 71.2472 47.5528L71.8979 48.312ZM59.8723 41.0038C61.1988 42.7094 63.415 44.2934 65.5994 45.5715C67.795 46.8561 70.0124 47.8622 71.3913 48.3984L71.7538 47.4664C70.4193 46.9475 68.2502 45.9638 66.1044 44.7084C63.9475 43.4464 61.8675 41.9403 60.6616 40.3899L59.8723 41.0038ZM77.1123 33.9983C71.3462 39.3209 65.9067 40.493 60.2932 40.1975L60.2407 41.1961C66.0836 41.5037 71.7989 40.2639 77.7906 34.7331L77.1123 33.9983Z")
        ctx.fill(path1,"evenodd");
        ctx.fill(path2);
    }

    //ㅏ
    let k = (ctx)=>{
        let path1 = new Path2D("M20.8085 6.29352V90C23.0229 76.5832 29.9733 48.6569 41.9266 28.0476C43.9116 24.6252 46.0346 21.4046 48.2967 18.4857C48.9634 17.6495 49.5782 16.892 50.1294 16.2247C49.5087 16.9558 48.8978 17.7101 48.2967 18.4857C46.4801 20.764 44.2782 23.6258 41.9266 26.8355C45.71 8.86644 31.2126 1.09378 23.173 1.09378C14.6605 0.147914 -1.27927 6.12894 2.83755 29.4665C3.53131 21.0689 7.98364 5.19425 20.8085 6.29352ZM25.0647 6.29584L24.5918 53.5877C29.4786 45.3905 39.7252 28.6176 41.6169 27.1043C42.0898 20.4834 35.9418 6.76876 25.0647 6.29584Z")
        let path2 = new Path2D("M20.8085 90H20.3085V96.0998L21.3018 90.0814L20.8085 90ZM20.8085 6.29352H21.3085V5.83455L20.8512 5.79535L20.8085 6.29352ZM41.9266 28.0476L42.3591 28.2985L41.9266 28.0476ZM50.1294 16.2247L50.5149 16.5431L49.7483 15.9011L50.1294 16.2247ZM41.9266 26.8355L41.4373 26.7325L40.9596 29.0014L42.33 27.131L41.9266 26.8355ZM23.173 1.09378L23.1178 1.59072L23.1453 1.59378H23.173V1.09378ZM2.83755 29.4665L2.34515 29.5534L3.0173 33.3637L3.33585 29.5077L2.83755 29.4665ZM24.5918 53.5877L24.0918 53.5827L24.0733 55.4339L25.0213 53.8438L24.5918 53.5877ZM25.0647 6.29584L25.0864 5.79631L24.5699 5.77385L24.5647 6.29084L25.0647 6.29584ZM41.6169 27.1043L41.9292 27.4947L42.1 27.3581L42.1156 27.1399L41.6169 27.1043ZM21.3085 90V6.29352H20.3085V90H21.3085ZM41.4941 27.7968C29.4979 48.4801 22.5343 76.4733 20.3151 89.9186L21.3018 90.0814C23.5115 76.6931 30.4488 48.8337 42.3591 28.2985L41.4941 27.7968ZM47.9015 18.1794C45.6234 21.1189 43.4882 24.3587 41.4941 27.7968L42.3591 28.2985C44.335 24.8917 46.4458 21.6902 48.6919 18.7919L47.9015 18.1794ZM49.7439 15.9062C49.1907 16.576 48.574 17.3358 47.9058 18.1739L48.6876 18.7974C49.3527 17.9632 49.9657 17.208 50.5149 16.5431L49.7439 15.9062ZM48.6919 18.7919C49.2887 18.0219 49.8949 17.2734 50.5106 16.5483L49.7483 15.9011C49.1225 16.6381 48.5069 17.3982 47.9015 18.1794L48.6919 18.7919ZM42.33 27.131C44.6775 23.9268 46.8753 21.0704 48.6876 18.7974L47.9058 18.1739C46.085 20.4575 43.8789 23.3248 41.5233 26.54L42.33 27.131ZM23.173 1.59378C27.0603 1.59378 32.5665 3.48426 36.6285 7.57841C40.6651 11.647 43.2947 17.9109 41.4373 26.7325L42.4159 26.9386C44.3419 17.791 41.6145 11.1841 37.3384 6.87409C33.0876 2.58964 27.3253 0.593782 23.173 0.593782V1.59378ZM3.32995 29.3797C1.2936 17.8359 4.22764 10.69 8.61307 6.5369C13.0247 2.35891 18.9845 1.13145 23.1178 1.59072L23.2282 0.59684C18.849 0.110243 12.5826 1.40037 7.92546 5.81082C3.24209 10.2461 0.264679 17.7595 2.34515 29.5534L3.32995 29.3797ZM20.8512 5.79535C14.1733 5.22297 9.69812 9.09305 6.84026 14.0697C3.98886 19.0351 2.68983 25.1817 2.33925 29.4254L3.33585 29.5077C3.67903 25.3537 4.95304 19.3642 7.70745 14.5677C10.4554 9.78242 14.6188 6.26481 20.7658 6.7917L20.8512 5.79535ZM25.0918 53.5927L25.5647 6.30084L24.5647 6.29084L24.0918 53.5827L25.0918 53.5927ZM41.3045 26.7138C41.0124 26.9475 40.6104 27.4249 40.1445 28.038C39.6663 28.6673 39.0862 29.4867 38.4326 30.4466C37.1247 32.3671 35.5102 34.8675 33.8046 37.5729C30.3927 42.9845 26.6071 49.2308 24.1623 53.3317L25.0213 53.8438C27.4633 49.7473 31.2444 43.5086 34.6505 38.1062C36.3538 35.4045 37.961 32.9156 39.2591 31.0094C39.9085 30.056 40.4775 29.2526 40.9407 28.643C41.4164 28.0171 41.7484 27.6393 41.9292 27.4947L41.3045 26.7138ZM25.043 6.79536C30.2597 7.02218 34.3897 10.4268 37.1793 14.6693C39.9735 18.9188 41.3448 23.895 41.1181 27.0686L42.1156 27.1399C42.3618 23.6926 40.8957 18.5011 38.0148 14.1199C35.1294 9.73158 30.7469 6.04242 25.0864 5.79631L25.043 6.79536ZM41.5233 26.54C35.3552 34.959 28.1361 45.7982 24.1349 54.8009L25.0487 55.2071C29.0044 46.3067 36.1703 35.5385 42.33 27.131L41.5233 26.54Z")
        let path3 = new Path2D()
        path3.arc(3.78335,31.8336,3.78335,0,Math.PI*2,false)
        ctx.fill(path1,"evenodd");
        ctx.fill(path2);
        ctx.fill(path3)
    }
    //ㅑ
    let i = (ctx)=>{
        let path1 = new Path2D("M3.8063 8.91441C-1.69369 0.915046 1.65013 -2.57116 7.3063 5.91458C8.01271 6.97439 8.91319 8.47774 9.96203 10.2288C13.3674 15.9141 18.3369 24.2106 23.3063 28.415C29.8063 33.9144 49.3063 28.9144 49.3063 28.9144C51.473 28.7477 53.3063 29.6644 51.3063 33.9144C37.8063 50.915 27.8063 87.3144 29.8063 96.9144C29.3063 99.2477 27.9063 102.014 26.3063 94.4144C21.6396 77.2477 17.3063 41.915 18.3063 31.9144L3.8063 8.91441ZM24.8063 35.9136C24.8063 35.9136 33.3063 38.415 42.8063 35.9136C38.6396 45.7469 29.2063 69.5136 28.8063 73.9136C26.3063 66.5802 22.8063 46.3136 24.8063 35.9136Z")
        let path2 = new Path2D("M7.3063 5.91458L7.72234 5.63726V5.63726L7.3063 5.91458ZM3.8063 8.91441L4.22926 8.64776L4.22395 8.63934L4.21831 8.63113L3.8063 8.91441ZM9.96203 10.2288L10.391 9.97186L9.96203 10.2288ZM23.3063 28.415L23.6293 28.0333L23.3063 28.415ZM49.3063 28.9144L49.268 28.4159L49.2244 28.4192L49.1821 28.4301L49.3063 28.9144ZM51.3063 33.9144L51.6979 34.2253L51.734 34.1798L51.7587 34.1273L51.3063 33.9144ZM29.8063 96.9144L30.2952 97.0192L30.3173 96.9159L30.2958 96.8124L29.8063 96.9144ZM26.3063 94.4144L26.7956 94.3114L26.7926 94.2972L26.7888 94.2832L26.3063 94.4144ZM18.3063 31.9144L18.8038 31.9641L18.8209 31.7931L18.7293 31.6477L18.3063 31.9144ZM42.8063 35.9136L43.2667 36.1087L43.6641 35.1707L42.679 35.4301L42.8063 35.9136ZM24.8063 35.9136L24.9475 35.4339L24.4193 35.2785L24.3153 35.8191L24.8063 35.9136ZM28.8063 73.9136L28.333 74.0749L29.0915 76.2996L29.3043 73.9588L28.8063 73.9136ZM7.72234 5.63726C6.29208 3.49149 4.98384 2.06416 3.89324 1.27364C3.34974 0.879681 2.83043 0.621936 2.35403 0.533795C1.86495 0.443309 1.38751 0.529714 1.0288 0.869668C0.687232 1.19338 0.537102 1.6695 0.506261 2.18244C0.475031 2.70187 0.561036 3.32037 0.756194 4.01321C1.14713 5.4011 1.99938 7.16889 3.39428 9.19769L4.21831 8.63113C2.86322 6.66025 2.07095 4.9925 1.71874 3.74209C1.54232 3.11577 1.48209 2.61443 1.50446 2.24246C1.52721 1.864 1.63051 1.67716 1.71668 1.59549C1.78571 1.53007 1.91033 1.46868 2.1721 1.51711C2.44655 1.56788 2.8269 1.73577 3.30635 2.0833C4.26163 2.77575 5.49243 4.09479 6.89025 6.19189L7.72234 5.63726ZM10.391 9.97186C9.3448 8.22527 8.43706 6.70953 7.72234 5.63726L6.89025 6.19189C7.58837 7.23926 8.48158 8.73021 9.53309 10.4857L10.391 9.97186ZM23.6293 28.0333C21.1959 25.9745 18.7411 22.8931 16.4589 19.5929C14.1804 16.298 12.0947 12.8163 10.391 9.97186L9.53309 10.4857C11.2347 13.3266 13.3365 16.8358 15.6364 20.1616C17.9326 23.4821 20.4473 26.6511 22.9834 28.7968L23.6293 28.0333ZM49.3063 28.9144C49.1821 28.4301 49.1821 28.4301 49.1821 28.4301C49.1819 28.4301 49.1818 28.4301 49.1816 28.4302C49.1811 28.4303 49.1803 28.4305 49.1792 28.4308C49.1771 28.4314 49.1738 28.4322 49.1693 28.4333C49.1603 28.4356 49.1468 28.439 49.1287 28.4436C49.0925 28.4526 49.0383 28.4661 48.9671 28.4835C48.8246 28.5183 48.614 28.5688 48.3433 28.6313C47.8017 28.7563 47.0197 28.929 46.0606 29.1193C44.1413 29.5 41.5175 29.9502 38.6946 30.2294C35.8687 30.5089 32.8602 30.6154 30.1662 30.3162C27.4591 30.0155 25.141 29.3124 23.6293 28.0333L22.9834 28.7968C24.7216 30.2674 27.2785 31.0016 30.0558 31.31C32.8462 31.62 35.9314 31.5076 38.793 31.2245C41.6576 30.9412 44.315 30.4851 46.2552 30.1002C47.2257 29.9076 48.0179 29.7327 48.5681 29.6057C48.8433 29.5422 49.058 29.4907 49.2044 29.4549C49.2776 29.437 49.3337 29.4231 49.3717 29.4136C49.3907 29.4088 49.4052 29.4052 49.415 29.4027C49.4199 29.4014 49.4237 29.4005 49.4263 29.3998C49.4276 29.3995 49.4286 29.3992 49.4293 29.399C49.4296 29.399 49.4299 29.3989 49.4301 29.3988C49.4303 29.3988 49.4305 29.3987 49.3063 28.9144ZM51.7587 34.1273C52.7656 31.9877 52.9232 30.466 52.2884 29.4863C51.6463 28.4951 50.3767 28.3306 49.268 28.4159L49.3447 29.4129C50.4026 29.3315 51.133 29.542 51.4492 30.03C51.7727 30.5294 51.847 31.5911 50.8539 33.7015L51.7587 34.1273ZM30.2958 96.8124C29.8168 94.5131 30.0497 90.5205 30.9162 85.4964C31.7789 80.4946 33.2572 74.5357 35.2204 68.3407C39.1508 55.9382 45.0035 42.6555 51.6979 34.2253L50.9147 33.6035C44.1091 42.1739 38.2118 55.5913 34.2672 68.0386C32.2929 74.2685 30.8025 80.272 29.9308 85.3264C29.0629 90.3584 28.7958 94.5157 29.3168 97.0164L30.2958 96.8124ZM25.817 94.5174C26.2195 96.4291 26.6164 97.7264 27.0055 98.5525C27.1994 98.9641 27.4052 99.2891 27.6325 99.5151C27.8636 99.7448 28.1554 99.9072 28.496 99.8887C28.8262 99.8707 29.0829 99.6883 29.2645 99.4961C29.4479 99.3019 29.5989 99.0527 29.7237 98.7945C29.9744 98.2757 30.1659 97.6224 30.2952 97.0192L29.3174 96.8096C29.1967 97.3731 29.0257 97.9406 28.8233 98.3593C28.7216 98.5699 28.6233 98.7186 28.5376 98.8093C28.45 98.902 28.4176 98.8915 28.4416 98.8902C28.476 98.8883 28.4443 98.9121 28.3375 98.8059C28.227 98.696 28.0804 98.4877 27.9102 98.1264C27.5712 97.4066 27.1931 96.1997 26.7956 94.3114L25.817 94.5174ZM17.8088 31.8646C17.3023 36.9301 18.1446 48.3187 19.6852 60.5397C21.228 72.7774 23.4814 85.929 25.8238 94.5456L26.7888 94.2832C24.4645 85.7332 22.218 72.6351 20.6774 60.4146C19.1347 48.1774 18.3103 36.8994 18.8038 31.9641L17.8088 31.8646ZM3.38333 9.18106L17.8833 32.181L18.7293 31.6477L4.22926 8.64776L3.38333 9.18106ZM42.679 35.4301C38.002 36.6616 33.5642 36.6628 30.2908 36.3538C28.6554 36.1995 27.3143 35.968 26.3841 35.7757C25.9191 35.6796 25.5571 35.5933 25.3128 35.5315C25.1906 35.5005 25.0978 35.4757 25.0363 35.4589C25.0056 35.4504 24.9826 35.444 24.9678 35.4397C24.9603 35.4376 24.9549 35.4361 24.9515 35.4351C24.9498 35.4346 24.9486 35.4342 24.9479 35.4341C24.9476 35.434 24.9474 35.4339 24.9473 35.4339C24.9473 35.4339 24.9473 35.4339 24.9473 35.4339C24.9474 35.4339 24.9475 35.4339 24.8063 35.9136C24.6651 36.3932 24.6653 36.3933 24.6655 36.3933C24.6656 36.3934 24.6658 36.3934 24.6661 36.3935C24.6665 36.3936 24.6671 36.3938 24.6678 36.394C24.6692 36.3944 24.6711 36.395 24.6735 36.3957C24.6784 36.3971 24.6853 36.3991 24.6942 36.4016C24.712 36.4067 24.738 36.414 24.7718 36.4232C24.8395 36.4418 24.9386 36.4683 25.0674 36.5009C25.325 36.5661 25.7013 36.6557 26.1816 36.755C27.1421 36.9535 28.5197 37.1911 30.1968 37.3494C33.5484 37.6658 38.1106 37.667 42.9336 36.3971L42.679 35.4301ZM29.3043 73.9588C29.3498 73.458 29.5296 72.6434 29.8334 71.5552C30.1346 70.4765 30.5492 69.1576 31.0507 67.6615C32.0534 64.6699 33.3977 60.9861 34.8613 57.1284C37.7882 49.4135 41.1859 41.0194 43.2667 36.1087L42.3459 35.7185C40.2601 40.6411 36.8577 49.047 33.9263 56.7737C32.4607 60.6369 31.1112 64.3343 30.1025 67.3437C29.5983 68.8482 29.1778 70.1848 28.8702 71.2863C28.5653 72.3785 28.3628 73.2692 28.3084 73.8683L29.3043 73.9588ZM24.3153 35.8191C23.2994 41.1018 23.6842 48.8352 24.6229 56.1274C25.5626 63.428 27.0681 70.3643 28.333 74.0749L29.2796 73.7522C28.0445 70.1295 26.55 63.2659 25.6147 55.9997C24.6784 48.7253 24.3132 41.1253 25.2973 36.008L24.3153 35.8191Z")
        ctx.fill(path1,"evenodd");
        ctx.fill(path2);
    }
    //ㅓ
    let j = (ctx)=>{
        let path1 = new Path2D("M62.6269 20.7824C58.5233 12.1192 58.0674 10.7513 55.3316 3C64.4508 13.0311 70.5302 18.8066 74.4819 20.7824C60.256 38.656 49.1002 49.8117 45.3005 53.1554C31.4394 64.0984 13.9914 69.5699 7 70.9378C38.7347 59.2653 57.3074 32.6373 62.6269 20.7824Z")
        let path2 = new Path2D("M68.5544 90.9999C57.2466 65.4663 41.9568 48.4438 35.7253 43.1243C51.0455 52.2435 57.3074 58.4749 58.5233 60.4507C51.8912 42.2124 60.9275 25.1899 66.2746 18.9585L73.5699 21.2383C59.344 38.0176 64.2987 74.7374 68.5544 90.9999Z")
        ctx.fill(path1);
        ctx.fill(path2);
    }
    //ㅕ
    let u = (ctx)=>{
        let path1 = new Path2D("M28.2846 3C20.2214 13.943 -0.512812 59.443 44.4113 94C20.7973 60.019 22.1411 20.4705 28.2846 3Z")
        let path2 = new Path2D("M20.7972 79.0253C36.0654 79.0253 48.4427 66.648 48.4427 51.3797C48.4427 36.1115 36.0654 23.7342 20.7972 23.7342C12.5059 23.7342 5.06711 27.3842 1.47556e-06 33.165C3.81105 31.5553 8.14171 30.6456 12.7339 30.6456C28.0021 30.6456 40.3794 40.7022 40.3794 53.1076C40.3794 65.513 28.0021 75.5696 12.7339 75.5696C10.5478 75.5696 8.42096 75.3635 6.38124 74.9738C10.5787 77.5438 15.5149 79.0253 20.7972 79.0253Z")
        ctx.fill(path1);
        ctx.fill(path2);
    }
    //ㅗ
    let h = (ctx)=>{
        let path1 = new Path2D("M68.5054 29.6968L71.0906 6C67.2991 18.4085 61.4682 20.9362 59.0267 20.6489C-13.7872 12.0826 12.4948 60.7181 15.9416 62.8723C18.699 64.5957 17.0905 79.6755 15.9416 87C18.0097 81.1404 29.7288 76.8032 35.3299 75.367L24.1278 74.0745C19.9916 70.9723 22.4044 69.0479 24.1278 68.4734C28.0054 71.4894 57.7341 77.0904 69.7979 77.0904C45.2394 67.6117 17.2342 66.2634 17.2342 41.3298C17.2342 24.0957 46.1011 27.5426 68.5054 29.6968Z")
        let path2 = new Path2D()
        path2.ellipse(6.03191,70.6278,6.03191,6.46277,0,0,Math.PI*2,false)
        ctx.fill(path1);
        ctx.fill(path2);
    }
    //ㅛ
    let y = (ctx)=>{
        let path1 = new Path2D("M16 12.5L3 2C8.2 3.6 22.5 9.66667 29 12.5C25 20.9 29.1667 47 32.5 59C50.1 57 83.6667 64.6667 96 70C70 62.4 32 66.5 18.5 67.5C19.3 33.9 17.6667 16.3333 16 12.5Z")
        let path2 = new Path2D("M69.5 41.5C59.9 38.7 52.8333 32.3333 50.5 29.5C54.4999 43.1 45.1666 55.1667 40 59.5H50.5C47.3 48.3 61.8333 42.8333 69.5 41.5Z")
        ctx.fill(path1);
        ctx.fill(path2);
    }
    //ㅜ
    let n = (ctx)=>{
        let path1 = new Path2D("M22.8195 27C42.3194 19 55.3195 12 60.3195 3C48.8195 13.2832 31.3195 18.6 24.3195 21C-17.6805 35.4 6.15293 49 25.3196 55C14.3196 46 0.53846 36.1409 22.8195 27Z")
        let path2 = new Path2D("M23.8193 94.5C42.2193 62.1 36.486 33.6667 31.3193 23.5L41.8193 18.5C47.4193 62.5 32.1527 87.5 23.8193 94.5Z")
        let path3 = new Path2D()
        path3.arc(53.8193,27,6.5,0,Math.PI*2,false)
        ctx.fill(path1);
        ctx.fill(path2);
        ctx.fill(path3)
    }
    //ㅠ
    let b = (ctx)=>{
        let path1 = new Path2D("M18.3635 36.1935C5.76279 45.5812 1.99213 48.3904 1 62.7769C1 62.7769 3.6572 81.9086 4.72008 63.3082C6.3144 54.2737 12.6917 47.8968 22.7891 43.1138C45.1095 30.8905 52.0183 27.7019 66.8986 27.7019C70.2644 31.5991 76.5708 46.5148 74.8702 75C79.1217 55.691 82.9481 17.0731 64.2414 17.0731C53.4354 6.08998 28.8474 -10.2429 4.18867 12.2901C4.18867 17.0731 6.31443 20.2617 21.1947 34.0792C20.2047 34.8218 19.2617 35.5244 18.3635 36.1935ZM21.9511 9.96654C19.8258 10.5569 16.7598 11.4087 13.2231 13.8844L29.1662 30.3594C31.3194 29.4025 32.6109 28.6609 33.8651 27.9408C35.3969 27.0613 36.873 26.2138 39.795 25.045L53.081 19.7306C50.1142 17.0576 50.3598 17.4347 50.4696 17.6034C50.5563 17.7366 50.5585 17.7399 48.8294 16.0107C44.0465 11.2273 36.075 5.38141 24.3833 9.10129C23.85 9.43905 23.0194 9.66979 21.9511 9.96654Z")
        let path2 = new Path2D("M1 62.7769L0.501185 62.7425L0.497614 62.7943L0.504754 62.8457L1 62.7769ZM18.3635 36.1935L18.6622 36.5945L18.3635 36.1935ZM4.72008 63.3082L4.22769 63.2213L4.22257 63.2503L4.22089 63.2797L4.72008 63.3082ZM22.7891 43.1138L23.0031 43.5657L23.0164 43.5594L23.0292 43.5524L22.7891 43.1138ZM66.8986 27.7019L67.277 27.375L67.1274 27.2019H66.8986V27.7019ZM74.8702 75L74.3711 74.9702L73.9925 81.3114L75.3585 75.1075L74.8702 75ZM64.2414 17.0731L63.885 17.4237L64.0319 17.5731H64.2414V17.0731ZM4.18867 12.2901L3.85138 11.921L3.68867 12.0697V12.2901H4.18867ZM21.1947 34.0792L21.4948 34.4792L21.9736 34.1201L21.535 33.7128L21.1947 34.0792ZM13.2231 13.8844L12.9363 13.4748L12.4561 13.8109L12.8637 14.2321L13.2231 13.8844ZM21.9511 9.96654L21.8173 9.48478L21.9511 9.96654ZM29.1662 30.3594L28.8069 30.7071L29.05 30.9582L29.3693 30.8163L29.1662 30.3594ZM33.8651 27.9408L33.6161 27.5072L33.8651 27.9408ZM39.795 25.045L39.6093 24.5808L39.795 25.045ZM53.081 19.7306L53.2667 20.1948L54.0123 19.8966L53.4157 19.3591L53.081 19.7306ZM50.4696 17.6034L50.8886 17.3307L50.8886 17.3306L50.4696 17.6034ZM48.8294 16.0107L49.183 15.6572L48.8294 16.0107ZM24.3833 9.10129L24.2317 8.62482L24.1702 8.64438L24.1157 8.67888L24.3833 9.10129ZM1.49882 62.8113C1.99221 55.6567 3.17178 51.4667 5.73448 47.9026C8.32081 44.3056 12.3381 41.3061 18.6622 36.5945L18.0648 35.7926C11.7882 40.4687 7.61978 43.5676 4.92258 47.3188C2.20174 51.1028 0.999912 55.5106 0.501185 62.7425L1.49882 62.8113ZM4.22089 63.2797C4.0884 65.5983 3.93158 67.3188 3.75981 68.557C3.58543 69.814 3.40184 70.5213 3.24051 70.8541C3.1514 71.0379 3.12525 70.9884 3.22227 70.9547C3.38768 70.8973 3.47909 71.0113 3.43382 70.9649C3.38933 70.9193 3.314 70.8098 3.21886 70.6055C3.12776 70.4098 3.03317 70.1597 2.93707 69.8634C2.55025 68.6707 2.18979 66.891 1.92416 65.3885C1.79211 64.6416 1.68478 63.9708 1.61046 63.4867C1.57332 63.2448 1.54445 63.0496 1.52489 62.9152C1.51512 62.848 1.50767 62.796 1.50269 62.7609C1.5002 62.7433 1.49832 62.73 1.49707 62.7211C1.49645 62.7167 1.49598 62.7134 1.49568 62.7112C1.49553 62.7101 1.49541 62.7093 1.49534 62.7088C1.49531 62.7085 1.49528 62.7083 1.49526 62.7082C1.49525 62.7081 1.49525 62.7081 1 62.7769C0.504754 62.8457 0.50477 62.8458 0.504797 62.846C0.504819 62.8461 0.504856 62.8464 0.504901 62.8467C0.50499 62.8474 0.50512 62.8483 0.505289 62.8495C0.505629 62.8519 0.506129 62.8555 0.506787 62.8602C0.508104 62.8696 0.510054 62.8834 0.512622 62.9015C0.517757 62.9376 0.525362 62.9908 0.535308 63.0592C0.555198 63.1959 0.584455 63.3936 0.622042 63.6385C0.697194 64.128 0.805757 64.8065 0.939431 65.5626C1.20524 67.0661 1.57551 68.9068 1.98585 70.1719C2.08904 70.4901 2.19789 70.7818 2.31231 71.0276C2.42269 71.2646 2.55494 71.4961 2.71805 71.6632C2.88038 71.8296 3.17938 72.0282 3.55031 71.8994C3.85284 71.7944 4.03014 71.5176 4.14032 71.2904C4.37757 70.801 4.57595 69.9514 4.75033 68.6944C4.92731 67.4186 5.08603 65.6682 5.21926 63.3367L4.22089 63.2797ZM22.575 42.662C12.3993 47.4821 5.8611 53.9653 4.22769 63.2213L5.21247 63.3951C6.76769 54.5822 12.9842 48.3115 23.0031 43.5657L22.575 42.662ZM66.8986 27.2019C59.4124 27.2019 53.9054 28.0054 47.4626 30.3543C41.0431 32.6948 33.7017 36.5677 22.5489 42.6753L23.0292 43.5524C34.1969 37.4366 41.4701 33.6035 47.8051 31.2938C54.117 28.9926 59.5044 28.2019 66.8986 28.2019V27.2019ZM75.3693 75.0298C76.2221 60.746 75.0683 49.8475 73.2716 42.0186C71.4788 34.207 69.0367 29.4126 67.277 27.375L66.5202 28.0287C68.1263 29.8884 70.5202 34.5004 72.2969 42.2423C74.0697 49.9669 75.2189 60.7689 74.3711 74.9702L75.3693 75.0298ZM64.2414 17.5731C68.7015 17.5731 71.82 19.8552 73.9561 23.6539C76.108 27.4809 77.2432 32.8247 77.6663 38.8308C78.512 50.8324 76.5024 65.262 74.3819 74.8925L75.3585 75.1075C77.4895 65.429 79.5189 50.8952 78.6639 38.7605C78.2367 32.6985 77.0867 27.181 74.8277 23.1638C72.5528 19.1182 69.1346 16.5731 64.2414 16.5731V17.5731ZM4.52596 12.6592C16.7283 1.50879 28.8668 -0.00187972 39.2888 2.59817C49.7461 5.20702 58.5171 11.9679 63.885 17.4237L64.5978 16.7224C59.1597 11.1951 50.2337 4.29802 39.5309 1.6279C28.7927 -1.05102 16.3078 0.53838 3.85138 11.921L4.52596 12.6592ZM21.535 33.7128C14.0898 26.7994 9.87006 22.5758 7.50853 19.4927C6.33218 17.9569 5.63213 16.723 5.22322 15.5985C4.81634 14.4796 4.68867 13.4442 4.68867 12.2901H3.68867C3.68867 13.5275 3.82673 14.6843 4.28343 15.9402C4.73811 17.1906 5.49952 18.5143 6.71465 20.1007C9.13608 23.2621 13.4194 27.5415 20.8545 34.4456L21.535 33.7128ZM18.6622 36.5945C19.5603 35.9254 20.5039 35.2224 21.4948 34.4792L20.8947 33.6792C19.9054 34.4213 18.963 35.1234 18.0648 35.7926L18.6622 36.5945ZM13.5098 14.294C16.9739 11.8691 19.9714 11.0354 22.0849 10.4483L21.8173 9.48478C19.6802 10.0785 16.5457 10.9482 12.9363 13.4748L13.5098 14.294ZM29.5255 30.0117L13.5824 13.5367L12.8637 14.2321L28.8069 30.7071L29.5255 30.0117ZM33.6161 27.5072C32.3664 28.2248 31.0925 28.9561 28.9632 29.9025L29.3693 30.8163C31.5462 29.8488 32.8555 29.097 34.114 28.3744L33.6161 27.5072ZM39.6093 24.5808C36.6562 25.762 35.1572 26.6224 33.6161 27.5072L34.114 28.3744C35.6367 27.5002 37.0898 26.6656 39.9807 25.5092L39.6093 24.5808ZM52.8953 19.2664L39.6093 24.5808L39.9807 25.5092L53.2667 20.1948L52.8953 19.2664ZM50.8886 17.3306C50.8718 17.3048 50.8685 17.299 50.8689 17.2998C50.8698 17.3015 50.8723 17.3063 50.8757 17.3137C50.8789 17.3206 50.8849 17.3344 50.8911 17.3534C50.8966 17.3705 50.9071 17.4061 50.9112 17.4538C50.915 17.4976 50.9171 17.5908 50.8691 17.6961C50.8128 17.8195 50.7096 17.9112 50.5879 17.9548C50.4845 17.9919 50.3969 17.9842 50.3571 17.9785C50.3131 17.9721 50.2812 17.9608 50.2668 17.9554C50.2507 17.9493 50.2402 17.944 50.2368 17.9423C50.2312 17.9394 50.2541 17.9514 50.3242 18.0034C50.5969 18.2051 51.2588 18.7618 52.7464 20.1021L53.4157 19.3591C51.9365 18.0264 51.2377 17.4352 50.9189 17.1994C50.8413 17.1419 50.7643 17.089 50.6939 17.0528C50.6656 17.0383 50.5937 17.0023 50.501 16.9889C50.4529 16.9819 50.3589 16.9746 50.2505 17.0134C50.1239 17.0588 50.0173 17.1537 49.9591 17.2814C49.9092 17.391 49.9106 17.4897 49.915 17.54C49.9196 17.5942 49.9319 17.6373 49.9401 17.6626C49.9564 17.7129 49.9773 17.7532 49.9883 17.7737C50.0116 17.817 50.0399 17.8599 50.0506 17.8762L50.8886 17.3306ZM48.4758 16.3642C49.3383 17.2268 49.7739 17.6622 49.9822 17.8643C50.0344 17.9149 50.076 17.9545 50.108 17.9837C50.1239 17.9981 50.141 18.0133 50.1581 18.0274C50.1672 18.0349 50.2045 18.0661 50.2535 18.0928C50.2611 18.097 50.3571 18.1538 50.4914 18.1554C50.575 18.1563 50.7141 18.1355 50.836 18.0237C50.9557 17.914 50.9881 17.7813 50.996 17.7053C51.0089 17.5795 50.969 17.4828 50.9659 17.4745C50.9547 17.4448 50.943 17.422 50.9374 17.4113C50.9188 17.3759 50.8927 17.3369 50.8886 17.3307L50.0506 17.8762C50.0682 17.9032 50.0611 17.8935 50.0525 17.8771C50.0494 17.8711 50.0396 17.8523 50.0297 17.826C50.0278 17.821 49.9884 17.727 50.0012 17.6028C50.009 17.5278 50.0411 17.3957 50.1604 17.2865C50.2818 17.1752 50.4202 17.1545 50.5029 17.1555C50.6354 17.157 50.7287 17.2129 50.7326 17.2151C50.7583 17.2291 50.7759 17.2419 50.7813 17.2458C50.7885 17.2511 50.793 17.2548 50.7936 17.2553C50.7948 17.2563 50.7914 17.2535 50.7812 17.2442C50.7612 17.226 50.7288 17.1954 50.6786 17.1466C50.4774 16.9514 50.0495 16.5238 49.183 15.6572L48.4758 16.3642ZM24.5349 9.57775C35.9588 5.94307 43.7418 11.6297 48.4758 16.3642L49.183 15.6572C44.3512 10.8249 36.1911 4.81975 24.2317 8.62482L24.5349 9.57775ZM22.0849 10.4483C23.1204 10.1606 24.0397 9.91073 24.6508 9.52369L24.1157 8.67888C23.6603 8.96737 22.9183 9.17892 21.8173 9.48478L22.0849 10.4483Z")
        ctx.fill(path1,"evenodd");
        ctx.fill(path2);
    }
    //ㅡ
    let m = (ctx)=>{
        let path1 = new Path2D("M31.5071 18.9346C16.9944 41.0493 6.45541 37.0756 3 32.3244C8.18312 43.0361 17.2536 43.5545 29.7794 28.437C44.8969 8.13649 50.5119 2.95337 61.742 5.11301C60.0143 3.3853 49.648 -8.70864 31.5071 18.9346Z")
        let path2 = new Path2D("M41.0093 34.9166C24.1642 28.0055 19.8449 27.1417 9.91064 27.1416C28.4835 30.597 36.621 39.6675 44.4647 41.8273C68.3071 48.3926 87.6574 39.2353 95.0001 30.1651C81.1785 42.9501 55.6948 40.0994 41.0093 34.9166Z")
        let path3 = new Path2D("M53.9673 18.5028C43.5932 9.43234 53.9673 4.81194 55.6951 4.68115C37.3815 5.71778 42.8811 15.7673 48.3522 21.0944C51.8076 24.4588 71.9642 36.3558 76.4274 39.6672L83.7702 36.6437C73.4039 34.0521 57.3101 21.4255 53.9673 18.5028Z")
        ctx.fill(path1);
        ctx.fill(path2);
        ctx.fill(path3)
    }
    //ㅣ
    let l = (ctx)=>{
        let path1 = new Path2D("M14.8845 28.4645C26.4231 21.7005 32.3914 19.3132 29.6062 3C37.5638 14.1407 32.9219 21.9657 29.6062 24.4857C6.52897 38.0137 7.75306 52.6907 15.6803 59.8972C24.4337 67.8549 27.0391 67.9316 28.8104 75.0168C29.2083 76.6083 29.2083 80.1892 29.2083 83.3723C29.2083 83.3723 32.1872 83.9847 31.9935 84.5659L31.5956 85.7596H21.2506L20.8528 84.5659C21.512 83.9067 23.6379 83.3723 23.6379 83.3723V78.9956C19.6591 71.0379 15.6803 69.4817 14.8845 69.0485C-10.2617 55.3614 4.40693 36.2895 14.8845 28.4645Z")
        let path2 = new Path2D()
        path2.arc(18.8634,11.3556,7.95765,0,Math.PI*2,false)
        ctx.fill(path1);
        ctx.fill(path2);
    }

    let result = {
        'ㄱ':r,
        'ㄴ':s,
        'ㄷ':e,
        'ㄹ':f,
        'ㅁ':a,
        'ㅂ':q,
        'ㅅ':t,
        'ㅇ':d,
        'ㅈ':w,
        'ㅊ':c,
        'ㅋ':z,
        'ㅌ':x,
        'ㅍ':v,
        'ㅎ':g,
        'ㅏ':k,
        'ㅑ':i,
        'ㅓ':j,
        'ㅕ':u,
        'ㅗ':h,
        'ㅛ':y,
        'ㅜ':n,
        'ㅠ':b,
        'ㅡ':m,
        'ㅣ':l
    }
    
    return result
}   
